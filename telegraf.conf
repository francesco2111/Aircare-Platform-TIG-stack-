# Parsing 

[[inputs.mqtt_consumer]]
  servers = ["CHANGE WITH YOUR SERVER"]
  topics = ["aircare/17120009-00-23/002-000004/notification"]
  qos = 0
  client_id = "telegraf_client" # Un ID client univoco per Telegraf
  data_format = "json" 

  [[inputs.mqtt_consumer.json_v2]]
    measurement_name = "sensore_dati" 

    # Permette di ignorare errori di parsing minori o formati inattesi.
    json_strict = false 

    # Configura esplicitamente il campo timestamp
    json_time_key = "measurements.0.ts"
    json_time_format = "unix" # Timestamp Unix numerico
    json_timestamp_units = "s" # Timestamp in secondi

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "lux"
      path = "measurements.0.lux"
      data_type = "float"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "wifi_networks"
      path = "measurements.0.wifiNetworks"
      data_type = "integer"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "wifi_level"
      path = "measurements.0.wifiLevel"
      data_type = "integer"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "temperatura"
      path = "measurements.0.temperature"
      data_type = "float"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "umidita"
      path = "measurements.0.humidity"
      data_type = "float"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "pressione"
      path = "measurements.0.pressure"
      data_type = "float"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "tvoc"
      path = "measurements.0.tvoc"
      data_type = "integer"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "co2e"
      path = "measurements.0.co2e"
      data_type = "integer"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "iaq"
      path = "measurements.0.iaq"
      data_type = "float"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "sp_level"
      path = "measurements.0.spLevel"
      data_type = "float"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "hf_level"
      path = "measurements.0.hfLevel"
      data_type = "float" 

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "lf_level"
      path = "measurements.0.lfLevel"
      data_type = "integer"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "pm2_5"
      path = "measurements.0.pm2_5"
      data_type = "integer"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "pm10"
      path = "measurements.0.pm10"
      data_type = "integer"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "bvoc"
      path = "measurements.0.bvoc"
      data_type = "integer"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "battery_status"
      path = "measurements.0.battery"
      data_type = "string"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "main_power"
      path = "measurements.0.mainPower"
      data_type = "string"

    [[inputs.mqtt_consumer.json_v2.fields]]
      name = "co2"
      path = "measurements.0.co2"
      data_type = "integer"

    [[inputs.mqtt_consumer.json_v2.tags]]
      name = "device"
      path = "sender.device"

    [[inputs.mqtt_consumer.json_v2.tags]]
      name = "serial_number"
      path = "sender.serialNr"

    [[inputs.mqtt_consumer.json_v2.tags]]
      name = "mac_address"
      path = "sender.macAddr"

[[outputs.influxdb_v2]]
  urls = ["CHANGE"] # REPLACE WITH THE URL AND PORT OF THE INFLUX CONTAINER
  token = "CHANGE" # REPLACE WITH A NEW TOKEN FOR TELEGRAF
  organization = "CHANGE" # REPLACE WITH INFLUXDB ORGANIZATION
  bucket = "telegraf"
  insecure_skip_verify = true

[global_tags]

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false